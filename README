# API de Cadastro de Usu√°rios e Tarefas 
===================================================

Esta √© uma API para gerenciar usu√°rios e suas tarefas. Permite o cadastro de usu√°rios, autentica√ß√£o, cria√ß√£o, edi√ß√£o e exclus√£o de tarefas.

## Tecnologias Utilizadas
=============================

* Node.js: Plataforma de execu√ß√£o de c√≥digo JavaScript no servidor.
* Express.js: Framework para constru√ß√£o de aplicativos web com Node.js.
* PostgreSQL: Sistema de gerenciamento de banco de dados relacional.
* Sequelize: ORM (Object-Relational Mapping) para PostgreSQL.

## Recursos criados
===========================
* Login (JWT Authentication)
* Users CRUD
* Tasks CRUD

## Configura√ß√£o
=====================

### Crie um arquivo .env para configurar as vari√°veis de ambiente:

# Configura√ß√µes do banco de dados
DB_HOST= localhost
DB_PORT= porta do seu banco de dados (exemplo: 5433)
DB_USER= seu nome de usu√°rio
DB_PASSWORD= sua senha
DB_DATABASE= nome do seu projeto
DB_DIALECT= nome do seu banco de dados (exemplo: postgres)
NODE_ENV=development

# Chave secreta para tokens JWT
JWT_SECRET= crie uma senha 

# Porta em que o servidor ser√° executado
PORT=3040


# Clone o reposit√≥rio
$ git clone https://github.com/DanielAntunes-dev/BackEnd-ToDoList

# Install dependencies
$ npm install

# Create database
$ npm db:create

# Run migrations
$ npm migration:run

# Run server
$ npm start


# Rotas Api üìù
=====================

### POST /register
Cadastrar um novo usu√°rio

### POST /login
Autenticar um usu√°rio

### PUT /edit/:id
Editar um usu√°rio

### POST /reset
Recuperar a senha ou email do usu√°rio


### POST /task
Criar uma nova tarefa

### PUT edit/:taskId
Editar uma tarefa existente

### DELETE delete/:taskId
Excluir uma tarefa

### GET /api/tasks
Obter todas as tarefas do usu√°rio

### GET /tasks/day/:date
Obt√©m tarefas para um dia espec√≠fico

### GET /tasks/month/:month
Obt√©m tarefas para um m√™s espec√≠fico


